{"version":3,"sources":["img/karangos.png","ui/MainMenu.js","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","routed/ClientesForm.js","routed/ClientesList2.js","vintage-cars.png","routed/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logoImg","alt","secondary","toolbar","backgroundColor","background","paper","minHeight","bottom","link","light","FooterBar","Typography","variant","align","fontSize","href","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","justifyContent","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","maxWidth","display","flexWrap","mindWidth","marginBottom","marginTop","checkbox","alignItems","formatChars","KarangosForm","marca","modelo","cor","ano_fabricacao","Date","getFullYear","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","snackState","setSnackState","disabled","label","btnSendState","setBtnSendState","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","importadoCheckedTemp","target","newState","toUpperCase","validate","errorTemp","isValid","trim","includes","isNaN","disable","put","post","Alert","props","handleSnackClose","reason","onSubmit","preventDefault","saveData","TextField","onChange","fullWidth","required","helperText","select","i","years","map","year","type","onFocus","InputProps","startAdornment","InputAdornment","mask","FormControl","FormControlLabel","control","ClientesForm","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","clientes","setClientes","saverity","ClientesTemp","validade","overflow","boxSizing","ClientesList","disableColumnMenu","figura","transition","paragBotao","textAlign","HomePage","visible","setVisible","opacity","height","createMuiTheme","main","yellow","pink","box","default","paddingBottom","routed","padding","fontFamily","typography","Main","Box","exact","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.479034a9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    menuLink: {\n        color: theme.palette.text.primary,\n        textDecoration: 'none'\n    }\n}));\n\nexport default function MainMenu() {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n                <MenuIcon />\n            </IconButton>\n            <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuItem onClick={handleClose}>\n                    <Link className={classes.menuLink} to=\"/\">HomePage</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link className={classes.menuLink} to=\"/new\">Cadastrar Novo Karango</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link className={classes.menuLink} to=\"/list\">Listagem de Karangos</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link className={classes.menuLink} to=\"/newcliente\">Cadastrar Novo Cliente</Link>\n                </MenuItem>\n                <MenuItem onClick={handleClose}>\n                    <Link className={classes.menuLink} to=\"/listcliente\">Listagem de Clientes</Link>\n                </MenuItem>\n                \n            </Menu>\n        </div>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport logoImg from '../img/karangos.png'\nimport MainMenu from './MainMenu'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n    width: '300px'\n  }\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MainMenu />\n          <img src={logoImg} className={classes.logo} alt=\"Logotipo Karangos\" />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","//import Toolbar from '@material-ui/core/Toolbar'\nimport { Toolbar, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone'\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    //backgroundColor: 'yellow',\n    width: '100%',\n    color: theme.palette.text.secondary\n  },\n  toolbar: {\n    backgroundColor: theme.palette.background.paper,\n    minHeight: '42px',\n    // Posicionando a barra no rodapé da página\n    width: '100%',\n    position: 'fixed',\n    bottom: 0\n  },\n  link: {\n    color: theme.palette.secondary.light,\n    textDecoration: 'none',    // tira o sublinhado do link\n    '&:hover': {    // mouse passando sobre o link\n      textDecoration: 'underline' // retorna o sublinhado\n    }\n  }\n}));\n\nexport default function FooterBar() {\n  const classes = useStyles();\n  return (\n    <Toolbar className={classes.toolbar}>\n      <Typography variant=\"caption\" align=\"center\" className={classes.text}>\n        Desenvolvido com <LocalCafeTwoToneIcon fontSize=\"small\" /> por <a href=\"mailto:douglas198.floriano@hotmail.com\" className={classes.link}>Douglas Costa</a>\n      </Typography>\n    </Toolbar>\n  )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default function ConfirmDialog({title='Confirmar',isOpen=false,onClose,children}) {\n \n  const handleClose = (result) => {\n      //só chama a função onClose se a prop correspondente tiver sido passada\n    if(onClose) onClose(result);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={()=>handleClose(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n           {children}\n        </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>handleClose(true)} color=\"primary\">\n            OK\n          </Button>\n          <Button onClick={()=>handleClose(false)} color=\"primary\" autoFocus>\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid'\n\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        minWidth: 650,\n    },\n    dataGrid: {\n        '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n            visibility: 'hidden'\n        },\n        '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n            visibility: 'visible'\n        }\n    },\n    toolbar: {\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n        margin: theme.spacing(2, 0)\n    }\n}));\n\nexport default function KarangosList() {\n    const classes = useStyles()\n\n    // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n    const [karangos, setKarangos] = useState([])\n    const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n    const [sbOpen, setSbOpen] = useState(false)\n    const [sbSeverity, setSbSeverity] = useState('success')\n    const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n\n    const history = useHistory()\n\n    useEffect(() => {\n        getData()\n    }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n    // é executado apenas uma vez, no carregamento inicial do componente\n\n    async function getData() {\n        try { // tenta buscar os dados\n            let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n            if (response.data.length > 0) setKarangos(response.data)\n        }\n        catch (error) {\n            console.error(error)\n        }\n    }\n\n    async function deleteItem() {\n        try {\n            await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n            getData()     // Atualiza os dados da tabela\n            setSbSeverity('success')\n            setSbMessage('Exclusão efetuada com sucesso.')\n        }\n        catch (error) {\n            setSbSeverity('error')\n            setSbMessage('ERRO: ' + error.message)\n        }\n        setSbOpen(true)   // Exibe a snackbar\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou com a exclusão \n        if (result) deleteItem()\n    }\n\n    function handleDelete(id) {\n        setDeletable(id)\n        setDialogOpen(true)\n    }\n\n    function handleSbClose() {\n        setSbOpen(false)    // Fecha a snackbar\n    }\n\n    const columns = [\n        {\n            field: 'id',\n            headerName: 'Cód.',\n            align: 'right',\n            headerAlign: 'right',\n            flex: true,\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n        },\n        {\n            field: 'marca',\n            headerName: 'Marca',\n            flex: true\n        },\n        {\n            field: 'modelo',\n            headerName: 'Modelo',\n            flex: true\n        },\n        {\n            field: 'cor',\n            headerName: 'Cor',\n            align: 'center',\n            headerAlign: 'center',\n            flex: true\n        },\n        {\n            field: 'ano_fabricacao',\n            headerName: 'Ano',\n            align: 'center',\n            headerAlign: 'center',\n            flex: true,\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n        },\n        {\n            field: 'importado',\n            headerName: 'Importado?',\n            align: 'center',\n            headerAlign: 'center',\n            flex: true,\n            renderCell: params => (\n                <Checkbox checked={params.value === \"1\"} readOnly />\n            )\n        },\n        {\n            field: 'placa',\n            headerName: 'Placa',\n            align: 'center',\n            headerAlign: 'center',\n            flex: true\n        },\n        {\n            field: 'preco',\n            headerName: 'Preço',\n            align: 'right',\n            headerAlign: 'right',\n            flex: true,\n            valueFormatter: params => (\n                Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n            ),\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n        },\n        {\n            field: 'editar',\n            headerName: 'Editar',\n            align: 'center',\n            headerAlign: 'center',\n            flex: true,\n            renderCell: params => (\n                <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n                    <EditIcon />\n                </IconButton>\n            )\n        },\n        {\n            field: 'excluir',\n            headerName: 'Excluir',\n            align: 'center',\n            headerAlign: 'center',\n            flex: true,\n            renderCell: params => (\n                <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n                    <DeleteIcon color=\"error\" />\n                </IconButton>\n            )\n        },\n    ];\n\n    return (\n        <>\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Deseja realmente excluir este karango?\n      </ConfirmDialog>\n\n            <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n                <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n                    {sbMessage}\n                </MuiAlert>\n            </Snackbar>\n\n            <h1>Listagem de Karangos</h1>\n            <Toolbar className={classes.toolbar}>\n                <Button color=\"secondary\" variant=\"contained\" size=\"large\"\n                    startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n                    Novo Karango\n        </Button>\n            </Toolbar>\n            <Paper elevation={4}>\n                <DataGrid className={classes.dataGrid} rows={karangos} columns={columns} pageSize={10} autoHeight={true} disableSelectionOnClick={true} />\n            </Paper>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '90%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            mindWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px'\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: \"100%\",\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    checkbox: {\n        alignItems: 'center'\n    }\n}))\n\n/* Classes de caracteres de entrada para a máscara do campo placa\n    1) Três primeiras posições: qualquer letra, de A a Z (maiúsculo ou minúsculo) ~> [A-Za-z]\n    2) Posições numéricas (1º, a 3º e a 4º depois do traço) ~> [0-9]\n    3) 2º posição depois do traço: pode receber dígitos ou letras de A a J(maiúsculas ou minúsculas) ~> [0-9A-Ja-j]\n*/\n\n//Representando as classes de caracteres de máscara como objeto\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n}\n\n//Finalmente, a máscara de entrada do campo placa\nconst placaMask = 'AAA-0#00'\n\n//Máscara para CPF: '000.000.000-0#00\n//Máscara para CNPJ: '00.000.000/0000-00'\n\nexport default function KarangosForm() {\n    const classes = useStyles()\n\n    const [karango, setKarango] = useState({\n        id: null,\n        marca: '',\n        modelo: '',\n        cor: '',\n        ano_fabricacao: (new Date()).getFullYear(), //Ano corrente\n        importado: '0',\n        placa: '',\n        preco: 0\n    })\n    const [currentId, setCurrentId] = useState()\n    const [importadoChecked, setImportadoChecked] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Karango salvo com sucesso'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        marca: '',\n        modelo: '',\n        cor: '',\n        placa: '',\n        preco: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n    const [title, setTitle] = useState('Cadastrar Novo Karango')\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n\n        if (params.id){\n            setTitle('Editando Karango')\n        getData(params.id)\n        }\n    }, [])\n\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n            // if(response.data.length > 0) \n            setKarango(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'Não foi possível carregar os dados para edição'\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n\n        const karangoTemp = { ...karango }\n        let importadoCheckedTemp = importadoChecked\n\n        //Se houver id no event.target, ele será o nome da propriedade\n        //senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'importado') {\n            const newState = !importadoChecked\n            //setKarango({...karango, importado: (newState ? '1' : '0')})\n            karangoTemp.importado = (newState ? '1' : '0')\n            //setImportadoChecked(newState)\n            importadoCheckedTemp = newState\n        }\n        else if (property === 'placa') {\n            //setKarango({...karango, [property]: event.target.value.toUpperCase()})\n            karangoTemp[property] = event.target.value.toUpperCase()\n        }\n        else {\n            //Quando o nome de uma propriedade de um objeto aparece entre [],\n            //isso se chama 'propriedade calculada\". O nome da propriedade vai corresponder\n            //à avaliação da expressão entre os colchetes\n            //setCurrentId(event.target.id)\n            //setKarango({...karango, [property]: event.target.value})\n            karangoTemp[property] = event.target.value\n        }\n        setKarango(karangoTemp)\n        setImportadoChecked(importadoCheckedTemp)\n        setIsModified(true) // o FORMULÁRIO FOI MODIFICADO\n        validate(karangoTemp) // Dispara a validação\n\n    }\n\n    function validate(data) {\n\n        const errorTemp = {\n            marca: '',\n            modelo: '',\n            cor: '',\n            placa: '',\n            preco: ''\n        }\n        let isValid = true\n\n        //trim(): retira as espaços em branco do início e do final de uma string\n\n        // Validação do campo marca\n        if (data.marca.trim() === '') {\n            errorTemp.marca = 'A marca deve ser preenchida'\n            isValid = false\n        }\n\n        // Validação do campo modelo\n        if (data.modelo.trim() === '') {\n            errorTemp.modelo = 'O modelo deve ser preenchido'\n            isValid = false\n        }\n\n        // Validação do campo cor\n        if (data.cor.trim() === '') {\n            errorTemp.cor = 'Escolha uma cor'\n            isValid = false\n        }\n\n        // Validação do campo placa\n        // Valor válido não pode ser string nem conter o caractere _\n        if (data.placa.trim() === '' || data.placa.includes('_')) {\n            errorTemp.placa = 'A placa deve ser corretamente preenchida'\n            isValid = false\n        }\n\n        // Validação do campo preco\n        //Valor válido deve ser numérico e maior do que zero\n        if (isNaN(data.preco) || Number(data.preco) <= 0) {\n            errorTemp.preco = 'O preço deve ser preenchido e maior que zero'\n            isValid = false\n        }\n\n        setError(errorTemp)\n        return isValid\n\n    }\n\n\n    function years() {\n        let result = []\n        for (let i = (new Date()).getFullYear(); i >= 1900; i--) result.push(i)\n        return result\n    }\n\n    async function saveData() {\n        try {\n            // Desabilitar o botão salvar\n            setBtnSendState({ disable: true, label: 'Enviando...' })\n\n            //Se o registro já existe (edição, verbo HTTP PUT)\n            if (params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n\n            //Registro não existe, cria um novo registro\n            await axios.post('https://api.faustocintra.com.br/karangos', karango)\n\n\n\n            setSnackState({\n                open: true,\n                severity: 'sucess',\n                message: 'Karango salvo com sucesso'\n            })\n\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO: ' + error.message\n            })\n        }\n        //Reabilitar o botão enviar\n        setBtnSendState({ disable: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault() //Evitar o recarregamento da página      \n\n        //Só salva os dados se eles forem válidos\n        if (validate(karango)) saveData()\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        // Evita que a snackbar seja fechada clicando-se fora dela\n        if (reason === 'clickaway') return\n        setSnackState({ ...snackState, open: false }) // Fecha a snackbar\n\n        //Retorna à página de listagem\n        history.push('/list')  //Retorna à página de listagem\n    }\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        // Se o usuário concordou emvolat \n        if (result) history.push('/list')\n    }\n\n    function handleGoBack() {\n\n        //Se o formulário estiver modificado, mostramos o diálogo de confirmação\n        if (isModified) setDialogOpen(true)\n\n        //Senão, voltmos diretamente á página de listagem\n        else history.push('/list')\n    }\n\n    return (\n        <>\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar open={snackState.open} autoHideDuration={6000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n            <form className={classes.form} onSubmit={handleSubmit}>\n\n                <TextField\n                    id=\"marca\"\n                    label=\"Marca\"\n                    variant=\"filled\"\n                    value={karango.marca}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.marca !== ''}\n                    helperText={error.marca}\n                />\n\n                <TextField\n                    id=\"modelo\"\n                    label=\"Modelo\"\n                    variant=\"filled\"\n                    value={karango.modelo}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.modelo !== ''}\n                    helperText={error.modelo}\n                />\n\n                <TextField\n                    id=\"cor\"\n                    label=\"Cor\"\n                    variant=\"filled\"\n                    value={karango.cor}\n                    onChange={event => handleInputChange(event, 'cor')}\n                    fullWidth\n                    select\n                    required\n                    error={error.cor !== ''}\n                    helperText={error.cor}\n                >\n                    <MenuItem value=\"Amarelo\">Amarelo</MenuItem>\n                    <MenuItem value=\"Azul\">Azul</MenuItem>\n                    <MenuItem value=\"Bege\">Bege</MenuItem>\n                    <MenuItem value=\"Branco\">Branco</MenuItem>\n                    <MenuItem value=\"Cinza\">Cinza</MenuItem>\n                    <MenuItem value=\"Dourado\">Dourado</MenuItem>\n                    <MenuItem value=\"Laranja\">Laranja</MenuItem>\n                    <MenuItem value=\"Marrom\">Marrom</MenuItem>\n                    <MenuItem value=\"Prata\">Prata</MenuItem>\n                    <MenuItem value=\"Preto\">Preto</MenuItem>\n                    <MenuItem value=\"Roxo\">Roxo</MenuItem>\n                    <MenuItem value=\"Verde\">Verde</MenuItem>\n                    <MenuItem value=\"Vermelho\">Vermelho</MenuItem>\n                </TextField>\n\n                <TextField id=\"ano_fabricacao\" label=\"Ano de Fabricacao\" variant=\"filled\" value={karango.ano_fabricacao} onChange={event => handleInputChange(event, 'ano_fabricacao')} fullWidth select>\n                    {years().map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n\n                </TextField>\n\n\n\n\n                <TextField\n                    id=\"preco\"\n                    label=\"Preço\"\n                    variant=\"filled\"\n                    value={karango.preco}\n                    onChange={handleInputChange}\n                    fullWidth\n                    type=\"number\"\n                    onFocus={event => event.target.select()}\n                    InputProps={{\n                        startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n                    }}\n                    required\n                    error={error.preco !== ''}\n                    helperText={error.preco}\n                />\n                <InputMask\n                    formatChars={formatChars}\n                    mask={placaMask}\n                    id=\"placa\"\n                    onChange={event => handleInputChange(event, 'placa')}\n                    value={karango.placa}\n                >\n                    {() => <TextField\n                        label=\"Placa\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.placa !== ''}\n                        helperText={error.placa}\n                    />}\n                </InputMask>\n\n                <FormControl className={classes.checkbox} fullWidth>\n                    <FormControlLabel\n                        control={<Checkbox checked={importadoChecked} onChange={handleInputChange}\n                            id=\"importado\" />}\n                        label=\"Importado?\"\n                    />\n                </FormControl>\n\n                <Toolbar className={classes.toolbar}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disable={btnSendState.disable}\n                    >\n                        {btnSendState.label}\n                    </Button>\n                    <Button variant=\"contained\" onClick={handleGoBack} >Voltar</Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(karango)}<br />currentId: {currentId}</div> */}\n            </form>\n        </>\n\n    )\n}","import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useHistory, useParams } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\n\nconst useStyles = makeStyles(() => ({\n    form: {\n        maxWidth: '80%',\n        margin: '0 auto',\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        '& .MuiFormControl-root': {\n            minWidth: '200px',\n            maxWidth: '500px',\n            marginBottom: '24px',\n        }\n    },\n    toolbar: {\n        marginTop: '36px',\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-around'\n    },\n    // checkbox: {\n    //     alignItems: 'center'\n    // }\n}))\nconst formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]',\n    'B': '[9]'\n}\n\nconst cpfMask = '000.000.000-00'\nconst rgMask = '00.000.000 AAA/AA'\nconst telefoneMask = '(00) B0000-0000'\n\nexport default function ClientesForm() {\n    const classes = useStyles()\n\n    const [clientes, setClientes] = useState({\n        id: null,\n        nome: '',\n        cpf: '',\n        rg: '',\n        logradouro: '',\n        num_imovel: '',\n        complemento: '',\n        bairro: '',\n        municipio: '',\n        uf: '',\n        telefone: '',\n        email: ''\n    })\n    const [currentId, setCurrentId] = useState()\n\n    const [snackState, setSnackState] = useState({\n        open: false,\n        severity: 'success',\n        message: 'Cliente salvo com sucesso'\n    })\n\n    const [btnSendState, setBtnSendState] = useState({\n        disabled: false,\n        label: 'Enviar'\n    })\n\n    const [error, setError] = useState({\n        nome: '',\n        cpf: '',\n        rg: '',\n        logradouro: '',\n        num_imovel: '',\n        bairro: '',\n        municipio: '',\n        uf: '',\n        telefone: '',\n        email: ''\n    })\n\n    const [isModified, setIsModified] = useState(false)\n\n    const [dialogOpen, setDialogOpen] = useState(false)\n\n    const [title, setTitle] = useState(\"Cadastrar Novo Cliente\")\n\n    const history = useHistory()\n    const params = useParams()\n\n    useEffect(() => {\n        //Verficar se possui parâmetro id na rota\n        if (params.id){\n            setTitle('Editando o Cliente')\n        getData(params.id)\n        }\n    }, [])\n\n    async function getData(id) {\n        try {\n            let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\n\n            setClientes(response.data)\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                saverity: 'error',\n                message: 'Não foi possível carregar dados para edição'\n\n            })\n        }\n    }\n\n    function handleInputChange(event, property) {\n        const ClientesTemp = { ...clientes }\n\n\n        // Se houver id no event.target, ele será o nome da propriedade\n        // senão, usaremos o valor do segundo parâmetro\n        if (event.target.id) property = event.target.id\n\n        if (property === 'cpf') {\n            ClientesTemp[property] = event.target.value\n        }\n        else if (property === 'rg') {\n            ClientesTemp[property] = event.target.value.toUpperCase()\n\n        } else if (property === 'telefone') {\n            ClientesTemp[property] = event.target.value.toUpperCase()\n        }\n        else {\n            // Quando o nome de uma propriedade de um objeto aparece entre [],\n            // isso se chama \"propriedade calculada\". O nome da propriedade vai\n            // corresponder à avaliação da expressão entre os colchetes\n            //setCurrentId(event.target.id)\n            //setClientes({ ...clientes, [property]: event.target.value })\n            ClientesTemp[property] = event.target.value\n        }\n        setClientes(ClientesTemp)\n        setIsModified(true)\n        validade(ClientesTemp) //Dispara a validação\n    }\n\n    function validade(data) {\n        const errorTemp = {\n            nome: '',\n            cpf: '',\n            rg: '',\n            logradouro: '',\n            num_imovel: '',\n            bairro: '',\n            municipio: '',\n            uf: '',\n            telefone: '',\n            email: ''\n        }\n        let isValid = true\n\n        // trim(): retira os espaços em branco do iníceio e do final de uma String\n        //Validação do campo nome\n        if (data.nome.trim() === '') {\n            errorTemp.marca = 'O nome deve ser preenchido'\n            isValid = false\n        }\n\n        //Validação do campo CPF\n        if (isNaN(data.cpf)=== ''|| data.cpf.includes('_')) {\n            errorTemp.cpf = 'O CPF deve ser preenchido corretamente'\n            isValid = false\n        }\n        //Validação do campo RG\n        if (data.rg.trim() === '') {\n            errorTemp.rg = 'O RG deve ser preenchido corretamente'\n            isValid = false\n        }\n        //Validação do campo Logradouro\n        if (data.logradouro.trim() === '') {\n            errorTemp.logradouro = 'O Logradouro deve ser preenchido'\n            isValid = false\n        }\n        //Validação do campo número do imóvel\n        if (isNaN(data.num_imovel) || Number(data.num_imovel) <=0) {\n            errorTemp.num_imovel = 'O número do imóvel deve ser preenchido'\n            isValid = false\n        }\n        //Validação do campo Bairro\n        if (data.bairro=== '') {\n            errorTemp.bairro = 'O Bairro deve ser preenchido'\n            isValid = false\n        }\n        //Validação do campo Município\n        if (data.municipio === '') {\n            errorTemp.municipio = 'Seu Município deve ser preenchido'\n            isValid = false\n        }\n        //Validação do campo Estado\n        if (data.uf === '') {\n            errorTemp.uf = 'O seu Estado deve ser preenchido'\n            isValid = false\n        }\n        //Validação do campo Telefone\n        if (data.telefone === '') {\n            errorTemp.telefone = 'O seu Telefone deve ser preenchido corretamente'\n            isValid = false\n        }\n        if (data.email === '') {\n            errorTemp.email = 'O seu Email deve ser preenchido'\n            isValid = false\n        }\n        setError(errorTemp)\n        return isValid\n\n    }\n\n\n\n    async function saveData() {\n        try {\n            //Desabilitar o botão de Enviar\n            setBtnSendState({ disabled: true, label: 'Enviando...' })\n\n            //PUT é para se já existe o parêmetro ID\n            if (params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, clientes)\n\n            // Registro não existem, ele criara através do método POST\n            await axios.post('https://api.faustocintra.com.br/clientes', clientes)\n\n            setSnackState({\n                open: true,\n                severity: 'success',\n                message: 'Cliente salvo com sucesso!'\n            })\n\n        }\n        catch (error) {\n            setSnackState({\n                open: true,\n                severity: 'error',\n                message: 'ERRO' + error.message\n            })\n        }\n        //Reabilitar o botão de enviar\n        setBtnSendState({ disabled: false, label: 'Enviar' })\n    }\n\n    function handleSubmit(event) {\n\n        event.preventDefault() // Evita o recarregamento da página\n\n        if (validade(clientes)) saveData()\n        else Alert('Preencha os')\n    }\n\n    function Alert(props) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    function handleSnackClose(event, reason) {\n        if (reason === 'clickaway') return\n        setSnackState({ ...snackState, open: false })\n\n        //Retorna a página de listagem\n        history.push('/listcliente')\n\n    }\n\n\n    function handleDialogClose(result) {\n        setDialogOpen(false)\n\n        //Se ousuário concordou em voltar\n        if (result) history.push('/listcliente')\n    }\n\n    function handleGoBack() {\n        if (isModified) setDialogOpen(true)\n\n        else history.push('/listcliente')\n    }\n\n    return (\n        <>\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n                Dados não salvos, deseja realmente voltar?\n            </ConfirmDialog>\n\n            <Snackbar open={snackState.open} autoHideDuration={3000} onClose={handleSnackClose}>\n                <Alert onClose={handleSnackClose} severity={snackState.severity}>\n                    {snackState.message}\n                </Alert>\n            </Snackbar>\n\n            <h1>{title}</h1>\n            <form className={classes.form} onSubmit={handleSubmit}>\n                <TextField id=\"nome\"\n                    label=\"Nome\"\n                    variant=\"filled\"\n                    value={clientes.nome}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.nome !== ''}\n                    helperText={error.nome}\n                />\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={cpfMask}\n                    fullWidth\n                    id=\"cpf\"\n                    onChange={event => handleInputChange(event, 'cpf')}\n                    value={clientes.cpf}\n                >\n                    {() => <TextField label=\"Cpf\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.cpf !== ''}\n                        helperText={error.cpf}\n                    />}\n                </InputMask>\n\n                <InputMask\n                    formatChars={formatChars}\n                    mask={rgMask}\n                    fullWidth\n                    id=\"rg\"\n                    onChange={event => handleInputChange(event, 'rg')}\n                    value={clientes.rg}\n                >\n                    {() => <TextField label=\"RG\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.rg !== ''}\n                        helperText={error.rg}\n                    />}\n                </InputMask>\n                <TextField id=\"logradouro\"\n                    label=\"Logradouro\"\n                    variant=\"filled\"\n                    value={clientes.logradouro}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.logradouro !== ''}\n                    helperText={error.logradouro}\n                />\n                <TextField id=\"num_imovel\"\n                    label=\"Número imovel\"\n                    variant=\"filled\"\n                    value={clientes.num_imovel}\n                    type=\"number\"\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.num_imovel !== ''}\n                    helperText={error.num_imovel}\n                />\n                <TextField id=\"complemento\" label=\"Complemento\" variant=\"filled\" value={clientes.complemento} onChange={handleInputChange} fullWidth />\n                <TextField id=\"bairro\"\n                    label=\"Bairro\"\n                    variant=\"filled\"\n                    value={clientes.bairro}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.bairro !== ''}\n                    helperText={error.bairro}\n                />\n                <TextField id=\"municipio\"\n                    label=\"municipio\"\n                    variant=\"filled\"\n                    value={clientes.municipio}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.municipio !== ''}\n                    helperText={error.municipio}\n                />\n                <TextField id=\"uf\"\n                    label=\"Estado\"\n                    variant=\"filled\"\n                    value={clientes.uf}\n                    onChange={event => handleInputChange(event, 'uf')} select\n                    fullWidth\n                    required\n                    error={error.uf !== ''}\n                    helperText={error.uf}>\n                    <MenuItem value=\"AC\">Acre</MenuItem>\n                    <MenuItem value=\"AL\">Alagoas</MenuItem>\n                    <MenuItem value=\"AP\">Amapá</MenuItem>\n                    <MenuItem value=\"AM\">Amazonas</MenuItem>\n                    <MenuItem value=\"BA\">Bahia</MenuItem>\n                    <MenuItem value=\"CE\">Ceará</MenuItem>\n                    <MenuItem value=\"DF\">Distrito Federal</MenuItem>\n                    <MenuItem value=\"ES\">Espírito Santo</MenuItem>\n                    <MenuItem value=\"GO\">Goiás</MenuItem>\n                    <MenuItem value=\"MA\">Maranhão</MenuItem>\n                    <MenuItem value=\"MT\">Mato Grosso</MenuItem>\n                    <MenuItem value=\"MS\">Mato Grosso do Sul</MenuItem>\n                    <MenuItem value=\"MG\"> Minas Gerais</MenuItem>\n                    <MenuItem value=\"PA\">Pará</MenuItem>\n                    <MenuItem value=\"PB\">Paraíba</MenuItem>\n                    <MenuItem value=\"PR\">Paraná</MenuItem>\n                    <MenuItem value=\"PE\">Pernambuco</MenuItem>\n                    <MenuItem value=\"PI\">Piauí</MenuItem>\n                    <MenuItem value=\"RJ\">Rio de Janeiro</MenuItem>\n                    <MenuItem value=\"RN\">Rio Grande do Norte</MenuItem>\n                    <MenuItem value=\"RS\">Rio Grande do Sul</MenuItem>\n                    <MenuItem value=\"RO\">Rondônia</MenuItem>\n                    <MenuItem value=\"RR\">Roraima</MenuItem>\n                    <MenuItem value=\"SC\">Santa Catarina</MenuItem>\n                    <MenuItem value=\"SP\">São Paulo</MenuItem>\n                    <MenuItem value=\"SE\">Sergipe</MenuItem>\n                    <MenuItem value=\"TO\">Tocantins</MenuItem>\n                </TextField>\n                <InputMask\n                    formatChars={formatChars}\n                    mask={telefoneMask}\n                    fullWidth\n                    id=\"telefone\"\n                    onChange={event => handleInputChange(event, 'telefone')}\n                    value={clientes.telefone}\n                >\n                    {() => <TextField label=\"Telefone\"\n                        variant=\"filled\"\n                        fullWidth\n                        required\n                        error={error.telefone !== ''}\n                        helperText={error.telefone}\n                    />}\n                </InputMask>\n                <TextField id=\"email\"\n                    label=\"Email\"\n                    variant=\"filled\"\n                    value={clientes.email}\n                    onChange={handleInputChange}\n                    fullWidth\n                    required\n                    error={error.email !== ''}\n                    helperText={error.email}\n                />\n                <Toolbar className={classes.toolbar} >\n                    <Button variant=\"contained\"\n                        color=\"secondary\"\n                        type=\"submit\"\n                        disabled={btnSendState.disabled}\n                    >\n                        {btnSendState.label}\n                    </Button>\n                    <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\n                </Toolbar>\n\n                {/* <div>{JSON.stringify(clientes)}</div> */}\n            </form>\n        </>\n    )\n}","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Button from '@material-ui/core/Button'\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport { useHistory } from 'react-router-dom'\r\nimport ConfirmDialog from '../ui/ConfirmDialog'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { DataGrid } from '@material-ui/data-grid'\r\nimport { GridColDef } from '@material-ui/data-grid'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    table: {\r\n        minWidth: 650,\r\n    },\r\n    dataGrid: {\r\n        '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\r\n            visibility: 'hidden'\r\n        },\r\n        '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\r\n            visibility: 'visible'\r\n        },\r\n        '&  .MuiDataGrid-columnHeaderTitle ': {\r\n            overflow: 'visible !important',\r\n        }, '& .MuiDataGrid-root *, .MuiDataGrid-root *::before, .MuiDataGrid-root *::after': {\r\n            boxSizing: 'initial !important',\r\n        }, '& .MuiDataGrid-root .MuiDataGrid-columnHeaderTitleContainer': {\r\n            overflow: 'visible !important',\r\n        },\r\n    },\r\n    toolbar: {\r\n        justifyContent: 'flex-end',\r\n        paddingRight: 0,\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n}));\r\n\r\nexport default function ClientesList() {\r\n    const classes = useStyles()\r\n\r\n    // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\r\n    const [clientes, setClientes] = useState([])\r\n    const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\r\n    const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\r\n    const [sbOpen, setSbOpen] = useState(false)\r\n    const [sbSeverity, setSbSeverity] = useState('success')\r\n    const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\r\n    // é executado apenas uma vez, no carregamento inicial do componente\r\n\r\n    async function getData() {\r\n        try { // tenta buscar os dados\r\n            let response = await axios.get('https://api.faustocintra.com.br/clientes/')\r\n            if (response.data.length > 0) setClientes(response.data)\r\n        }\r\n        catch (error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    async function deleteItem() {\r\n        try {\r\n            await axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\r\n            getData()     // Atualiza os dados da tabela\r\n            setSbSeverity('success')\r\n            setSbMessage('Exclusão efetuada com sucesso.')\r\n        }\r\n        catch (error) {\r\n            setSbSeverity('error')\r\n            setSbMessage('ERRO: ' + error.message)\r\n        }\r\n        setSbOpen(true)   // Exibe a snackbar\r\n    }\r\n\r\n    function handleDialogClose(result) {\r\n        setDialogOpen(false)\r\n\r\n        // Se o usuário concordou com a exclusão \r\n        if (result) deleteItem()\r\n    }\r\n\r\n    function handleDelete(id) {\r\n        setDeletable(id)\r\n        setDialogOpen(true)\r\n    }\r\n\r\n    function handleSbClose() {\r\n        setSbOpen(false)    // Fecha a snackbar\r\n    }\r\n    const columns = [\r\n        {\r\n            field: 'id',\r\n            headerName: 'Cód.',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            // flex: true,\r\n            width: 55,\r\n            disableColumnMenu: true,\r\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'nome',\r\n            headerName: 'Nome',\r\n            headerAlign: 'center',\r\n            // flex: true\r\n            align: 'left',\r\n            width: 190,\r\n        },\r\n        {\r\n            field: 'cpf',\r\n            headerName: 'CPF',\r\n            // flex: true\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'rg',\r\n            headerName: 'RG',\r\n            align: 'left',\r\n            // flex: true\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'logradouro',\r\n            headerName: 'Logradouro',\r\n            align: 'left',\r\n            headerAlign: 'center',\r\n            width: 200,\r\n            // flex: true,\r\n            sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\r\n        },\r\n        {\r\n            field: 'num_imovel',\r\n            headerName: 'Numero',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            // flex: true,\r\n            width: 100,\r\n        },\r\n        {\r\n            field: 'complemento',\r\n            headerName: 'Complemento',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            // flex: true\r\n            width: 160,\r\n        },\r\n        {\r\n            field: 'bairro',\r\n            headerName: 'Bairro',\r\n            align: 'left',\r\n            headerAlign: 'left',\r\n            // flex: true,\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'municipio',\r\n            headerName: 'Municipio',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            // flex: true,\r\n            width: 150,\r\n        },\r\n        {\r\n            field: 'uf',\r\n            headerName: 'UF',\r\n            align: 'left',\r\n            headerAlign: 'center',\r\n            // flex: true,\r\n            width: 90,\r\n        },\r\n        {\r\n            field: 'telefone',\r\n            headerName: 'Telefone',\r\n            align: 'left',\r\n            headerAlign: 'center',\r\n            // flex: true,\r\n            width: 180,\r\n        },\r\n        {\r\n            field: 'email',\r\n            headerName: 'Email',\r\n            align: 'left',\r\n            headerAlign: 'center',\r\n            // flex: true,\r\n            width: 245,\r\n        },\r\n        {\r\n            field: 'editar',\r\n            headerName: 'Editar',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            width: 125,\r\n            // flex: true,\r\n\r\n            renderCell: params => (\r\n                <IconButton aria-label=\"editar\" onClick={() => history.push(`/editcliente/${params.id}`)}>\r\n                    <EditIcon />\r\n                </IconButton>\r\n            )\r\n        },\r\n        {\r\n            field: 'excluir',\r\n            headerName: 'Excluir',\r\n            align: 'center',\r\n            headerAlign: 'center',\r\n            // flex: true,\r\n            width: 125,\r\n            renderCell: params => (\r\n                <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\r\n                    <DeleteIcon color=\"error\" />\r\n                </IconButton>\r\n            )\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\r\n                Deseja realmente excluir este cliente?\r\n      </ConfirmDialog>\r\n\r\n            <Snackbar open={sbOpen} autoHideDuration={3000} onClose={handleSbClose}>\r\n                <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\r\n                    {sbMessage}\r\n                </MuiAlert>\r\n            </Snackbar>\r\n\r\n            <h1>Listagem de Clientes</h1>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Button color=\"secondary\" variant=\"contained\" size=\"large\"\r\n                    startIcon={<AddBoxIcon />} onClick={() => history.push('/newcliente')}>\r\n                    Novo cliente\r\n        </Button>\r\n            </Toolbar>\r\n            <Paper elevation={4}>\r\n                <DataGrid className={classes.dataGrid} rows={clientes} columns={columns} pageSize={10} autoHeight={true} disableSelectionOnClick={true} />\r\n            </Paper>\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/vintage-cars.afc4f710.png\";","/*\n\n    Esta prova consiste em acrescentar um novo componente/página ao projeto Karangos.\n\n    1. Copie este arquivo para a pasta src/routed.\n\n    2. Copie o arquivo \"vintage-cars.png\" para a pasta src.\n\n    3. Altere o arquivo \"Apps.js\" e adicione um novo Route, com o valor path=\"/\". Assegure-se de que esse novo Route seja POSICIONADO ANTES de todos os outros. Faça com que o componente HomePage seja carregado pelo novo Route. Dessa forma, o componente será exibido logo no início. \n\n    4. Usando um título de primeiro nível e parágrafos, coloque o seguinte texto no componente:\n\n        Sobre o projeto Karangos\n\n        Karangos é um projeto front-end desenvolvido pelo Prof. Fausto Cintra juntamente com a turma do 4º semestre noturno de ADS da Fatec Franca.\n            \n        Seu objetivo é demonstrar as funcionalidades e possibilidades do React em conjunto com a biblioteca de componentes Material UI, acessando uma API REST remota.\n            \n        Clique sobre ícone do menu no canto superior esquerdo para acessar as funcionalidades.\n\n    5. Adicione mais um parágrafo, e, dentro dele, um botão com a cor \"secondary\" e o texto \"Surpresa!\".\n    \n    6. Faça as modificações necessárias na tag <img> para que a imagem \"vintage-cars.png\" seja exibida.\n\n    7. Aplique as classes de estilo definidas em useStyles nos lugares apropriados.\n\n    8. Crie uma variável de estado chamada \"visible\", e coloque seu valor inicial como false.\n\n    9. Ao clicar no botão criado no passo 5, a variável \"visible\" deve inverter seu valor (ou seja,  de true para false ou de false para true). Veja, na animação contida no arquivo \"resultado.gif\", o resultado pretendido.  \n\n    10. Coloque os arquivos \"App.js\" e \"HomePage.js\" em um ZIP para fazer a entrega da prova.\n\n*/\n\nimport { React, useState } from 'react'\nimport { makeStyles } from '@material-ui/styles'\nimport logo from '../vintage-cars.png'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles({\n    figura: {\n        display: 'block',\n        margin: '0 auto',\n        transition: 'opacity 1s linear'\n    },\n    paragBotao: {\n        textAlign: 'center',\n        align: \"center\"\n\n    }\n})\n\nexport default function HomePage() {\n    const classes = useStyles();\n\n    const [visible, setVisible] = useState(false);\n    // Transforme isto em uma variável de estado\n\n    function handleClick() {\n        if (!visible) {\n            setVisible(true)\n        }\n        else {\n            setVisible(false)\n        }\n\n    }\n\n    return (\n        <>\n            <h1> Sobre o projeto Karangos</h1>\n            <p>Karangos é um projeto front-end desenvolvido pelo Prof. Fausto Cintra juntamente com a turma do 4º semestre noturno de ADS da Fatec Franca.</p>\n            <p>Seu objetivo é demonstrar as funcionalidades e possibilidades do React em conjunto com a biblioteca de componentes Material UI, acessando uma API REST remota.</p>\n            <p>Clique sobre ícone do menu no canto superior esquerdo para acessar as funcionalidades</p>\n            <p className={classes.paragBotao}><Button onClick={handleClick} color=\"secondary\" variant=\"contained\">Surpresa!</Button></p>\n            <img src={logo} className={classes.figura} alt=\"Carros antigos\" style={{ opacity: visible ? '1' : '0', height: visible ? '591px' : '0' }} \n            />\n        </>\n    );\n}","/*\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button'\n\n <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Projeto Karangos</h1>\n        <Button variant=\"contained\" color=\"primary\">Clique aqui</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n</div> */\n\nimport TopBar from './ui/TopBar'\nimport FooterBar from './ui/FooterBar'\nimport { createMuiTheme, ThemeProvider, makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport { Box } from '@material-ui/core'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport KarangosList from './routed/KarangosList2'\nimport KarangosForm from './routed/KarangosForm'\nimport ClientesForm from './routed/ClientesForm'\nimport ClientesList from './routed/ClientesList2'\nimport HomePage from './routed/HomePage'\n\nconst theme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            main: yellow[500],\n        },\n        secondary: {\n            main: pink[500],\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    box: {\n        backgroundColor: theme.palette.background.default,\n        minHeight: '100vh',  // 100% da altura da área visível\n        paddingBottom: '42px' // Para que o conteúdo não fique escondido atrás do footer\n    },\n    routed: {\n        padding: '25px',\n        color: theme.palette.text.primary,\n        fontFamily: theme.typography.fontFamily\n    }\n}));\n\nfunction Main() {\n    const classes = useStyles()\n    return (\n        <Box className={classes.box}>\n            <BrowserRouter>\n                <TopBar />\n                <Box id=\"routed\" className={classes.routed}>\n                    <Switch> \n                        <Route exact path=\"/\">\n                            <HomePage/>\n                        </Route>\n                        <Route path=\"/list\">\n                            <KarangosList />\n                        </Route>\n                        <Route path=\"/new\">\n                            <KarangosForm />\n                        </Route>\n                        {/* :id é um parâmetro  (nomes de parâmetros começam com dois pontos)  */}\n                        <Route path=\"/edit/:id\">\n                            <KarangosForm />\n                        </Route>\n                        <Route path=\"/listcliente\">\n                            <ClientesList />\n                        </Route>\n                        <Route path=\"/newcliente\">\n                            <ClientesForm />\n                        </Route>\n                        <Route path=\"/editcliente/:id\">\n                            <ClientesForm />\n                        </Route>\n                    </Switch>\n                </Box>\n                <FooterBar />\n            </BrowserRouter>\n        </Box >\n    )\n}\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <Main />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}